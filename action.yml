name: Jira Integration
description: Github to Jira Integration Action
author: 'drew.mercer@brandlive.com'
inputs:
  action:
    description: 'Action to perform'
    required: true
  token: 
    description: 'Jira API token in the form of user_email:api_token'
    required: true
  jira_url:
    description: 'Jira URL of your instance'
    required: true
  project:
    description: 'Jira project key'
    required: true
  issue_type:
    description: 'Jira issue type'
    required: false
    default: "10004"    # Bug
  summary:
    description: 'Jira issue summary'
    required: false
  description:
    description: 'Jira issue description'
    required: false
  priority:
    description: 'Jira issue priority'
    required: false
    default: "3" # Bug
  customer_impact_area:
    description: 'What customer impact area does this issue affect?'
    required: false
  label:
    description: 'Jira issue label'
    required: false

runs:
  using: "composite"
  steps:
  - id: create-jira-issue-bdev
    if: ${{ inputs.action == 'create' }} && ${{ inputs.project == 'BDEV' }} # Bug
    run: |
      project_id="${{ inputs.project }}"
      summary="${{ inputs.summary }}"
      description="${{ inputs.description }}"
      issuetype_id="${{ inputs.issue_type }}"
      priority_id="${{ inputs.priority }}"
      customfield_10400="${{ inputs.customer_impact_area }}"
      labels="${{ inputs.label }}"
      json='{
        "fields": {
          "project": {
            "key": "%s"
          },
          "summary": "%s",
          "description": "'"%s"'",
          "issuetype": {
            "id": "%s"
          },
          "priority": {
            "id": "%s"
          },
          "customfield_10400": {
            "value": "%s"
          },
          "labels": [
            "%s"
          ]
        }
      }'

      payload=$(printf "$json" \
        "$project_id" \
        "$summary" \
        "$description" \
        "$issuetype_id" \
        "$priority_id" \
        "$customfield_10400" \
        "$labels")
        
      printf "%s\n" "$payload"
      curl -i -X POST \
        -u "${{ inputs.token }}" \
        -d "$payload" \
        -H "Content-Type: application/json" \
        -H "X-Atlassian-Token:no-check" \
        ${{ inputs.jira_url }}/rest/api/2/issue
    shell: bash

  - id: create-jira-issue-ops
    if: ${{ inputs.action == 'create' }} && ${{ inputs.project == 'OPS' }} # Task
    run: |
      project_id="${{ inputs.project }}"
      summary="${{ inputs.summary }}"
      description="${{ inputs.description }}"
      issuetype_id="${{ inputs.issue_type }}"
      priority_id="${{ inputs.priority }}"
      labels="${{ inputs.label }}"
      json='{
        "fields": {
          "project": {
            "key": "%s"
          },
          "summary": "%s",
          "description": "'"%s"'",
          "issuetype": {
            "id": "%s"
          },
          "priority": {
            "id": "%s"
          },
          "labels": [
            "%s"
          ]
        }
      }'

      payload=$(printf "$json" \
        "$project_id" \
        "$summary" \
        "$description" \
        "$issuetype_id" \
        "$priority_id" \
        "$labels")
        
      printf "%s\n" "$payload"
      curl -i -X POST \
        -u "${{ inputs.token }}" \
        -d "$payload" \
        -H "Content-Type: application/json" \
        -H "X-Atlassian-Token:no-check" \
        ${{ inputs.jira_url }}/rest/api/2/issue
    shell: bash